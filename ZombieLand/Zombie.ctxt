#BlueJ class context
comment0.target=Zombie
comment0.text=\r\n\ A\ programmable\ zombie\ character.\r\n\r\n\ @author\ bdahlem\r\n\ @version\ 1.0\r\n
comment1.params=
comment1.target=Zombie()
comment1.text=\r\n\ Make\ a\ new\ zombie,\ you\ evil\ person.\r\n
comment10.params=
comment10.target=void\ takeBrain()
comment10.text=\r\n\ Pick\ up\ brains\ if\ they\ exist.\ \ End\ if\ not.\r\n
comment11.params=
comment11.target=void\ putBrain()
comment11.text=\r\n\ Put\ down\ a\ brain\ if\ the\ Zombie\ has\ one.\ \ End\ if\ not.\r\n
comment12.params=classname
comment12.target=boolean\ isTouching(java.lang.String)
comment12.text=\r\n\ Check\ if\ this\ actor\ is\ touching\ an\ object\ with\ the\ given\ classname\r\n\ @param\ classname\ The\ name\ of\ the\ object\ type\ to\ check\ for\r\n
comment13.params=classname
comment13.target=void\ removeTouching(java.lang.String)
comment13.text=\r\n\ Remove\ one\ object\ that\ the\ zombie\ is\ touching\r\n\ @param\ classname\ the\ name\ of\ the\ type\ of\ object\ to\ remove\r\n
comment14.params=
comment14.target=boolean\ haveBrains()
comment14.text=\r\n\ Check\ if\ this\ Zombie\ is\ carrying\ a\ brain.\r\n
comment15.params=
comment15.target=boolean\ isBrainHere()
comment15.text=\r\n\ Check\ if\ there\ is\ a\ brain\ where\ the\ zombie\ is\ standing.\r\n
comment16.params=
comment16.target=boolean\ isFrontClear()
comment16.text=\r\n\ Check\ if\ there\ is\ a\ wall\ or\ the\ edge\ of\ the\ world\ in\ front\ of\ the\ zombie.\r\n
comment17.params=
comment17.target=void\ die()
comment17.text=\r\n\ Die,\ for\ reals\ this\ time.\r\n
comment18.params=fast
comment18.target=void\ die(boolean)
comment18.text=\r\n\ Die,\ for\ reals\ this\ time.\r\n
comment19.params=index
comment19.target=void\ playSound(int)
comment19.text=\r\n\ Play\ a\ sound\r\n
comment2.params=
comment2.target=void\ run()
comment20.params=
comment20.target=boolean\ isDead()
comment20.text=\r\n\ Check\ if\ this\ zombie\ is\ dead,\ or\ just\ undead\r\n
comment21.params=
comment21.target=void\ win()
comment21.text=\r\n\ This\ Zombie\ has\ reached\ its\ goal\ in\ afterlife\!\r\n
comment22.params=
comment22.target=boolean\ hasWon()
comment22.text=\r\n\ Check\ if\ this\ zombie\ has\ accomplished\ everything\ it\ could\ hope\ for.\r\n
comment23.params=
comment23.target=void\ showAnimationFrame()
comment23.text=\r\n\ Show\ the\ next\ animation\ frame\ based\ on\ the\ direction\ the\ zombie\ is\ facing.\r\n
comment24.params=
comment24.target=boolean\ handleWall()
comment24.text=\r\n\ Handle\ a\ wall\ in\ front\ of\ the\ zombie.\ \ Everything\ ends\ if\ we\ crash\ into\ a\ wall.\r\n
comment25.params=
comment25.target=boolean\ handleBucket()
comment25.text=\r\n\ Handle\ a\ bucket\ in\ front\ of\ the\ zombie.\ \ Running\ into\ a\ bucket\ tries\ to\ push\ it.\ \ If\ it\ can't\ be\ pushed,\r\n\ everything\ ends.\r\n
comment26.params=item\ dir
comment26.target=boolean\ tryPush(greenfoot.Actor,\ int)
comment26.text=\r\n\ Attempt\ to\ push\ an\ object\ in\ a\ given\ direction\r\n
comment27.params=classname\ distance
comment27.target=greenfoot.Actor\ checkFront(java.lang.String,\ int)
comment27.text=\r\n\ Check\ for\ an\ object\ of\ a\ particular\ class\ in\ front\ of\ the\ zombie\ or\ if\ that\ distance\ is\ beyond\ the\r\n\ edge\ of\ the\ world\r\n\r\n\ @param\ classname\ The\ class\ to\ check\ for.\ \ If\ null,\ look\ for\ the\ edge\ of\ the\ world\r\n\ @param\ distance\ The\ distance\ (in\ cells)\ to\ the\ front\ to\ look\ for\ the\ object/edge\r\n\ @return\ The\ object\ at\ the\ distance,\ or\ a\ reference\ to\ this\ zombie\ if\ the\ front\ is\ off\ the\ edge\ of\r\n\ \ \ \ \ \ \ \ \ the\ world,\ null\ if\ no\ object\ of\ the\ given\ class\ is\ at\ that\ distance\ or\ the\ world\ does\ not\r\n\ \ \ \ \ \ \ \ \ end\ within\ that\ distance.\r\n
comment28.params=
comment28.target=void\ preloadImages()
comment28.text=\r\n\ Load\ the\ zombie\ walking\ images\ for\ faster\ shambling\ animations.\r\n
comment29.params=name
comment29.target=greenfoot.GreenfootImage[]\ loadImages(java.lang.String)
comment29.text=\r\n\ Create\ and\ fill\ an\ array\ of\ Greenfoot\ images\ by\ loading\ the\ files\ with\r\n\ a\ given\ name\ followed\ by\ frame\ numbers\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Perform\ one\ animation\ step.\r\n
comment30.params=
comment30.target=void\ preloadSounds()
comment30.text=\r\n\ Load\ the\ zombie\ sounds\ for\ faster\ playback.\r\n
comment4.params=
comment4.target=void\ plan()
comment4.text=\r\n\ The\ special\ thing\ about\ this\ zombie\ is\ that\ has\ a\ plan.\r\n\ The\ zombie's\ plan\ is\ run\ in\ a\ separate\ thread.\ \ Commands,\ such\ as\ move()\r\n\ and\ turnRight()\ wait\ their\ turn\ so\ that\ they\ can\ happen\ asynchronously\ with\r\n\ animations,\ etc.\r\n
comment5.params=
comment5.target=boolean\ stillTrying()
comment5.text=\r\n\ Determine\ if\ this\ zombie\ is\ still\ struggling\ to\ make\ it\ in\ this\ world.\r\n
comment6.params=
comment6.target=void\ move()
comment6.text=\r\n\ Move\ forward\ one\ step.\r\n
comment7.params=x
comment7.target=void\ move(int)
comment7.text=\r\n\ Move\ forward\ x\ steps.\r\n
comment8.params=
comment8.target=void\ turnRight()
comment8.text=\r\n\ Turn\ 90\ degrees\ to\ the\ right.\r\n
comment9.params=turns
comment9.target=void\ turn(int)
comment9.text=\r\n\ Turn\ to\ the\ right\ a\ given\ number\ of\ times\r\n\ @param\ turns\ the\ number\ of\ times\ to\ turn\ 90\ degrees\ to\ the\ right\r\n
numComments=31
